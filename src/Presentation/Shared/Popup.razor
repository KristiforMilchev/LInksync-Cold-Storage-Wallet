@using SYNCWallet.Models
@using SYNCWallet.Services
@using SYNCWallet.Services.Definitions
@inject IJSRuntime JS

 

@code{
    
    [Parameter]
    public EventCallback WalletDeletedEventCallback { get; set; }
    
    ICommunication Communication { get; set; }
    protected override async Task OnInitializedAsync()
    {
        Communication = ServiceHelper.GetService<ICommunication>();
        Communication.ErrorCallback = TriggerLoader;
    }

    public async void TriggerLoader(string title, string message)
    {
        JS.InvokeVoidAsync("RiseError",title, message);
        
        if(message == "Self destruct activated, too many wrong pins, wallet removed!")
            WalletDeletedEventCallback.InvokeAsync();
        
        
        
        await InvokeAsync(() =>
        {

            Communication.TriggerLoader.Invoke("none");


            StateHasChanged();

        });
    }
}