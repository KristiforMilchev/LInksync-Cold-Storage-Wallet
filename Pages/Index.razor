@page "/"
@using System.Net
@using System.Timers
@using System.Numerics
@using NFTLock.Data

@inject NavigationManager NavigationManager
@inject IJSRuntime JS
 


<div class="container FixCenter" id="LoginPanel" style="height:100vh; display:flex;">
    <div class="row" style="width: 100%;display: flex;justify-content: center;align-items: center; padding:0; margin:0;">
        <div class="col-md-4 col-sm-12 " style="    min-width: 500px;">
            <div class="row" style="display: flex;flex-direction: row;align-items: center;justify-content: center;">
                <img src="/logo.png" style="width: 250px;height: 200px;" alt="homepage" class="light-logo" />

            </div>
            <div class="row" style="margin-top: 50px;">
                <h2 style="color:#EA7080; text-align:center; font-size:25pt;padding: 50px;">
                    Connect ATmega328 compatable device.
                </h2>
            </div>
        </div>
    </div>
</div>

@code {
    private AuthenicationHandler AuthenicationHandler { get; set; }
    private string Address { get; set; }
    private DateTime CheckConnection { get; set; }

    System.Timers.Timer aTimer { get; set; }
    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if(DateTime.UtcNow > CheckConnection)
        {

        }
        return base.OnAfterRenderAsync(firstRender);
    }

    protected override async Task OnInitializedAsync()
    {

       
        AuthenicationHandler = new AuthenicationHandler();

        var hardwareService = new HardwareService();
        var port = hardwareService.DeviceConnected();
        aTimer = new System.Timers.Timer();
        aTimer.Elapsed += new ElapsedEventHandler(OnTimedEvent);
        aTimer.Interval = 5000;
        aTimer.Start();
        CheckDeviceConnected(port);

    }

    // Specify what you want to happen when the Elapsed event is raised.
    private void OnTimedEvent(object source, ElapsedEventArgs e)
    {
        var hardwareService = new HardwareService();
        var port = hardwareService.DeviceConnected();
        CheckDeviceConnected(port);
    }

    private void CheckDeviceConnected(string port)
    {
        if (!string.IsNullOrEmpty(port))
        {


            var configStatus = MauiProgram.CheckConfigured();
            //var walletData = hardwareService.CreateAccount();

            if (configStatus)
            {

                KillTimer();
                NavigationManager.NavigateTo("LoginPanel");
            }
            else
            {
                KillTimer();
                NavigationManager.NavigateTo("Create");

            }
        }
        else
        {
            CheckConnection = CheckConnection.AddMinutes(1);
        }
    }


    private void KillTimer()
    {
        if (aTimer != null)
        {
            aTimer.Stop();
            aTimer.Dispose();
        }
    }
}