@page "/Landing"
@using NFTLock.Data
@using Newtonsoft.Json
@using SYNCWallet.Models
@using System.Security.Cryptography
@using System.Text
@using SYNCWallet.Services.Implementation
 
@inject NavigationManager NavigationManager
@inject IJSRuntime JS


<img src="/logo.png" class="LogoMainBackground" />
<p id="submitTrigger" style="display:none" onclick="DataSubmitted">

</p>
 <NavMenu>

 </NavMenu>

 

<div class="container">
    <div class="row">
        <p style="text-align:center;">
            @MauiProgram.PublicAddress
        </p>
    </div>
    <!-- Row -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="row">
                    <div class="col-lg-8">
                        <div class="card-body">
                            <h6 class="card-subtitle mb-0">Balance History @TokenName</h6>
                        </div>
                    </div>


                    <div id="android-vs-ios" class=" border-top"> </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row" >

        <div class="row" style="margin:0;">

            <!-- Column -->
            <div class="col-lg-4 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <!-- Row -->
                        <div class="row">
                            <div class="col-8">
                                <span class="display-6">
                                    @if(SelectedToken != null)
                                    {
                                        @SelectedToken.CurrentPrice
                                    }
                                    <i class="ti-angle-down fs-3 text-danger"></i>
                                </span>
                                <h6>Price</h6>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            <!-- Column -->
            <div class="col-lg-4 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <!-- Row -->
                        <div class="row">
                            <div class="col-8">
                                <span class="display-6">
                                    @if (SelectedToken != null)
                                    {
                                        @SelectedToken.CirculatingSupply
                                    }
                                    <i class="ti-angle-up fs-3 text-success"></i>    
                                </span>
                                <h6>Circulating Supply</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Column -->
            <div class="col-lg-4 col-md-6">
                <div class="card">
                    <div class="card-body">
                        <!-- Row -->
                        <div class="row">
                            <div class="col-8">
                                <span class="display-6">
                                    @if(SelectedToken != null)
                                    {
                                        @SelectedToken.CurrentPrice
                                    }                                
                                    <i class="ti-angle-up fs-3 text-success"></i>
                                </span>
                                <h6>Market Cap</h6>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
        <div class="row" style="margin:0;">
            <div class="col-md-12">
                <div class="card">
                    <div class="card-body" style="height: 50vh;overflow: hidden;overflow-y: scroll;">

                        <div class="table-responsive">
                            <table class="table stylish-table v-middle mb-0 no-wrap">
                                <thead>
                                    <tr>
                                        <th class="border-0 text-muted fw-normal" colspan="2">SYMBOL</th>
                                        <th class="border-0 text-muted fw-normal">Amount</th>
                                        <th class="border-0 text-muted fw-normal">Price USDT</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if(Tokens != null)
                                    {
                                        @foreach (var token in Tokens)
                                        {
                                            var contract = default(TokenContract);
                                            if (token.Contracts != null && token.Contracts.Count > 0)
                                            {
                                                contract = token.Contracts.FirstOrDefault();
                                            }
                                            <tr @onclick="(() => SelectToken(contract))">
                                                <td style="width:50px; text-align:left">
                                                    <img style="width: 100%;border-radius: 50%" src="@token.Logo" />
                                                </td>
                                                <td style="text-align:left;">
                                                    <h6 class="font-weight-medium mb-0">@token.Name</h6>
                                                    <small class="text-muted">
                                                        @token.Symbol
                                                    </small>
                                                </td>
                                                @if (contract != null)
                                                {
                                                    <td class="text-muted">

                                                        @contract.UserBalance

                                                    </td>
                                                    <td class="text-muted">
                                                        @if (contract.Price == null)
                                                        {
                                                            @: "--"
                                                        }
                                                        else
                                                        {
                                                            @contract.Price
                                                        }
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td class="text-muted">
                                                       --
                                                    </td>
                                                    <td class="text-muted">$ -- </td>
                                                }

                                            </tr>


                                        }
                                    }
                                   
                                    
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>


    </div>

</div>



@code {

    public string TokenName { get; set; }
    private bool IsChartRendered { get; set; }
    AuthenicationHandler Authenication { get; set; }
    List<Token> Tokens { get; set; }
    public string WalletAddress { get; set; }

    public TokenContract SelectedToken { get; set; }


    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (!IsChartRendered)
        {
            Task.Run(() => JS.InvokeAsync<string>("RenderChart"));

            Task.Run(() => JS.InvokeAsync<string>("requestMedia"));
            IsChartRendered = !IsChartRendered;
        }

        return base.OnAfterRenderAsync(firstRender);
    }
    protected override async Task OnInitializedAsync()
    {
        //Load Network Settings
        var utils = new Utilities();
        MauiProgram.NetworkSettings = await utils.SetupNetworks();

        TokenName = "SYNC";
        Authenication = new AuthenicationHandler();
        WalletAddress = Authenication.GetDefault();

        Tokens = await Authenication.GetSupportedTokens(2); //Get All tokens and their balance


    }


    private void SelectToken(TokenContract contract)
    {
        InvokeAsync(() =>
        {
            SelectedToken = contract;
            StateHasChanged();
        });
    }
}  